

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Nov 11 22:27:25 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 30/04/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F15244 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0018                     	;# 
    68  0019                     	;# 
    69  001A                     	;# 
    70  009A                     	;# 
    71  009B                     	;# 
    72  009B                     	;# 
    73  009C                     	;# 
    74  009D                     	;# 
    75  009E                     	;# 
    76  009F                     	;# 
    77  010C                     	;# 
    78  010D                     	;# 
    79  0119                     	;# 
    80  011A                     	;# 
    81  011B                     	;# 
    82  011B                     	;# 
    83  011C                     	;# 
    84  011D                     	;# 
    85  011E                     	;# 
    86  011F                     	;# 
    87  018C                     	;# 
    88  018D                     	;# 
    89  018E                     	;# 
    90  018F                     	;# 
    91  0190                     	;# 
    92  0191                     	;# 
    93  0192                     	;# 
    94  020C                     	;# 
    95  020D                     	;# 
    96  020E                     	;# 
    97  020E                     	;# 
    98  020F                     	;# 
    99  020F                     	;# 
   100  0210                     	;# 
   101  0210                     	;# 
   102  0211                     	;# 
   103  0211                     	;# 
   104  028C                     	;# 
   105  028C                     	;# 
   106  028D                     	;# 
   107  028D                     	;# 
   108  028E                     	;# 
   109  028F                     	;# 
   110  0290                     	;# 
   111  0291                     	;# 
   112  030C                     	;# 
   113  030C                     	;# 
   114  030D                     	;# 
   115  030E                     	;# 
   116  030F                     	;# 
   117  0310                     	;# 
   118  0310                     	;# 
   119  0311                     	;# 
   120  0312                     	;# 
   121  0313                     	;# 
   122  0314                     	;# 
   123  0314                     	;# 
   124  0315                     	;# 
   125  0316                     	;# 
   126  0318                     	;# 
   127  0318                     	;# 
   128  0319                     	;# 
   129  031A                     	;# 
   130  059C                     	;# 
   131  059C                     	;# 
   132  059D                     	;# 
   133  059D                     	;# 
   134  059E                     	;# 
   135  059F                     	;# 
   136  070C                     	;# 
   137  070D                     	;# 
   138  070E                     	;# 
   139  0716                     	;# 
   140  0717                     	;# 
   141  0718                     	;# 
   142  080C                     	;# 
   143  0811                     	;# 
   144  0813                     	;# 
   145  0814                     	;# 
   146  081A                     	;# 
   147  081A                     	;# 
   148  081B                     	;# 
   149  081C                     	;# 
   150  081C                     	;# 
   151  081D                     	;# 
   152  081E                     	;# 
   153  081F                     	;# 
   154  088E                     	;# 
   155  0890                     	;# 
   156  0891                     	;# 
   157  0892                     	;# 
   158  0893                     	;# 
   159  090C                     	;# 
   160  1E8F                     	;# 
   161  1E90                     	;# 
   162  1E91                     	;# 
   163  1E92                     	;# 
   164  1E93                     	;# 
   165  1E9C                     	;# 
   166  1EA1                     	;# 
   167  1EA2                     	;# 
   168  1EC3                     	;# 
   169  1EC5                     	;# 
   170  1EC6                     	;# 
   171  1EC7                     	;# 
   172  1ECB                     	;# 
   173  1ECB                     	;# 
   174  1ECB                     	;# 
   175  1ECC                     	;# 
   176  1ECC                     	;# 
   177  1ECC                     	;# 
   178  1F10                     	;# 
   179  1F11                     	;# 
   180  1F12                     	;# 
   181  1F14                     	;# 
   182  1F15                     	;# 
   183  1F1C                     	;# 
   184  1F1D                     	;# 
   185  1F1E                     	;# 
   186  1F1F                     	;# 
   187  1F20                     	;# 
   188  1F21                     	;# 
   189  1F22                     	;# 
   190  1F23                     	;# 
   191  1F24                     	;# 
   192  1F25                     	;# 
   193  1F26                     	;# 
   194  1F27                     	;# 
   195  1F38                     	;# 
   196  1F39                     	;# 
   197  1F3A                     	;# 
   198  1F3B                     	;# 
   199  1F3C                     	;# 
   200  1F3D                     	;# 
   201  1F3E                     	;# 
   202  1F3F                     	;# 
   203  1F43                     	;# 
   204  1F44                     	;# 
   205  1F45                     	;# 
   206  1F46                     	;# 
   207  1F47                     	;# 
   208  1F48                     	;# 
   209  1F49                     	;# 
   210  1F4A                     	;# 
   211  1F4E                     	;# 
   212  1F4F                     	;# 
   213  1F50                     	;# 
   214  1F51                     	;# 
   215  1F52                     	;# 
   216  1F53                     	;# 
   217  1F54                     	;# 
   218  1F55                     	;# 
   219  1FE4                     	;# 
   220  1FE5                     	;# 
   221  1FE6                     	;# 
   222  1FE7                     	;# 
   223  1FE8                     	;# 
   224  1FE8                     	;# 
   225  1FE9                     	;# 
   226  1FEA                     	;# 
   227  1FEB                     	;# 
   228  1FED                     	;# 
   229  1FEE                     	;# 
   230  1FEF                     	;# 
   231  0018                     _LATAbits	set	24
   232  000E                     _PORTCbits	set	14
   233  0014                     _TRISC	set	20
   234  0013                     _TRISB	set	19
   235  0012                     _TRISA	set	18
   236  001A                     _LATC	set	26
   237  0019                     _LATB	set	25
   238  0018                     _LATA	set	24
   239  00A2                     _TRISC2	set	162
   240  0092                     _TRISA2	set	146
   241  009D                     _ADCON0bits	set	157
   242  009C                     _ADRESH	set	156
   243  009B                     _ADRESL	set	155
   244  009E                     _ADCON1	set	158
   245  009D                     _ADCON0	set	157
   246  0892                     _OSCTUNE	set	2194
   247  0893                     _OSCFRQ	set	2195
   248  0891                     _OSCEN	set	2193
   249  1F38                     _ANSELAbits	set	7992
   250  1F52                     _INLVLC	set	8018
   251  1F47                     _INLVLB	set	8007
   252  1F3C                     _INLVLA	set	7996
   253  1F51                     _SLRCONC	set	8017
   254  1F46                     _SLRCONB	set	8006
   255  1F3B                     _SLRCONA	set	7995
   256  1F50                     _ODCONC	set	8016
   257  1F45                     _ODCONB	set	8005
   258  1F3A                     _ODCONA	set	7994
   259  1F4F                     _WPUC	set	8015
   260  1F39                     _WPUA	set	7993
   261  1F44                     _WPUB	set	8004
   262  1F38                     _ANSELA	set	7992
   263  1F43                     _ANSELB	set	8003
   264  1F4E                     _ANSELC	set	8014
   265  FA7A                     _WPUC2	set	64122
   266                           
   267                           	psect	cinit
   268  07FB                     start_initialization:	
   269                           ; #config settings
   270                           
   271  07FB                     __initialization:
   272                           
   273                           ; Clear objects allocated to COMMON
   274  07FB  01F4               	clrf	__pbssCOMMON& (0+127)
   275  07FC  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   276  07FD                     end_of_initialization:	
   277                           ;End of C runtime variable initialization code
   278                           
   279  07FD                     __end_of__initialization:
   280  07FD  0140               	movlb	0
   281  07FE  3187  2FAA         	ljmp	_main	;jump to C main() function
   282                           
   283                           	psect	bssCOMMON
   284  0074                     __pbssCOMMON:
   285  0074                     _par_impar:
   286  0074                     	ds	2
   287                           
   288                           	psect	cstackCOMMON
   289  0070                     __pcstackCOMMON:
   290  0070                     ?_PIN_MANAGER_Initialize:
   291  0070                     ??_PIN_MANAGER_Initialize:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_OSCILLATOR_Initialize:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ??_OSCILLATOR_Initialize:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_ADC_Initialize:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ??_ADC_Initialize:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_main:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_ADC_GetConversion:	
   310                           ; 1 bytes @ 0x0
   311                           
   312                           
   313                           ; 2 bytes @ 0x0
   314  0070                     	ds	2
   315  0072                     ??_ADC_GetConversion:
   316                           
   317                           ; 1 bytes @ 0x2
   318  0072                     	ds	1
   319  0073                     ADC_GetConversion@channel:
   320                           
   321                           ; 1 bytes @ 0x3
   322  0073                     	ds	1
   323  0074                     ??_main:
   324                           
   325                           	psect	maintext
   326  07AA                     __pmaintext:	
   327                           ; 1 bytes @ 0x4
   328 ;;
   329 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   330 ;;
   331 ;; *************** function _main *****************
   332 ;; Defined at:
   333 ;;		line 155 in file "main.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;		None
   336 ;; Auto vars:     Size  Location     Type
   337 ;;		None
   338 ;; Return value:  Size  Location     Type
   339 ;;                  1    wreg      void 
   340 ;; Registers used:
   341 ;;		wreg, status,2, status,0, pclath, cstack
   342 ;; Tracked objects:
   343 ;;		On entry : B3F/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   347 ;;      Params:         0       0       0       0       0       0       0       0
   348 ;;      Locals:         0       0       0       0       0       0       0       0
   349 ;;      Temps:          0       0       0       0       0       0       0       0
   350 ;;      Totals:         0       0       0       0       0       0       0       0
   351 ;;Total ram usage:        0 bytes
   352 ;; Hardware stack levels required when called:    1
   353 ;; This function calls:
   354 ;;		_ADC_GetConversion
   355 ;;		_ADC_Initialize
   356 ;;		_OSCILLATOR_Initialize
   357 ;;		_PIN_MANAGER_Initialize
   358 ;; This function is called by:
   359 ;;		Startup code after reset
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           
   364                           ;psect for function _main
   365  07AA                     _main:
   366  07AA                     l709:	
   367                           ;incstack = 0
   368                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   369                           
   370                           
   371                           ;main.c: 157:     PIN_MANAGER_Initialize();
   372  07AA  3187  27CF  3187   	fcall	_PIN_MANAGER_Initialize
   373  07AD                     l711:
   374                           
   375                           ;main.c: 158:     OSCILLATOR_Initialize();
   376  07AD  3187  2782  3187   	fcall	_OSCILLATOR_Initialize
   377  07B0                     l713:
   378                           
   379                           ;main.c: 159:     ADC_Initialize();
   380  07B0  3187  2787  3187   	fcall	_ADC_Initialize
   381  07B3                     l715:
   382                           
   383                           ;main.c: 161:         if (PORTCbits.RC2==1){
   384  07B3  0140               	movlb	0	; select bank0
   385  07B4  1D0E               	btfss	14,2	;volatile
   386  07B5  2FB7               	goto	u51
   387  07B6  2FB8               	goto	u50
   388  07B7                     u51:
   389  07B7  2FCB               	goto	l95
   390  07B8                     u50:
   391  07B8                     l717:
   392                           
   393                           ;main.c: 162:             if (ADC_GetConversion(1) > 512){
   394  07B8  3001               	movlw	1
   395  07B9  3187  278F  3187   	fcall	_ADC_GetConversion
   396  07BC  3002               	movlw	2
   397  07BD  0271               	subwf	?_ADC_GetConversion+1,w
   398  07BE  3001               	movlw	1
   399  07BF  1903               	skipnz
   400  07C0  0270               	subwf	?_ADC_GetConversion,w
   401  07C1  1C03               	skipc
   402  07C2  2FC4               	goto	u61
   403  07C3  2FC5               	goto	u60
   404  07C4                     u61:
   405  07C4  2FC8               	goto	l96
   406  07C5                     u60:
   407  07C5                     l719:
   408                           
   409                           ;main.c: 163:                 LATAbits.LATA2 = 0;
   410  07C5  0140               	movlb	0	; select bank0
   411  07C6  1118               	bcf	24,2	;volatile
   412                           
   413                           ;main.c: 164:             }else{
   414  07C7  2FB3               	goto	l715
   415  07C8                     l96:
   416                           
   417                           ;main.c: 165:                 LATAbits.LATA2 = 1;
   418  07C8  0140               	movlb	0	; select bank0
   419  07C9  1518               	bsf	24,2	;volatile
   420  07CA  2FB3               	goto	l715
   421  07CB                     l95:
   422                           
   423                           ;main.c: 168:             LATAbits.LATA2 = 0;
   424  07CB  1118               	bcf	24,2	;volatile
   425  07CC  2FB3               	goto	l715
   426  07CD  3180  2802         	ljmp	start
   427  07CF                     __end_of_main:
   428                           
   429                           	psect	text1
   430  07CF                     __ptext1:	
   431 ;; *************** function _PIN_MANAGER_Initialize *****************
   432 ;; Defined at:
   433 ;;		line 71 in file "main.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;		None
   436 ;; Auto vars:     Size  Location     Type
   437 ;;		None
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, status,2
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   447 ;;      Params:         0       0       0       0       0       0       0       0
   448 ;;      Locals:         0       0       0       0       0       0       0       0
   449 ;;      Temps:          0       0       0       0       0       0       0       0
   450 ;;      Totals:         0       0       0       0       0       0       0       0
   451 ;;Total ram usage:        0 bytes
   452 ;; Hardware stack levels used:    1
   453 ;; This function calls:
   454 ;;		Nothing
   455 ;; This function is called by:
   456 ;;		_main
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           
   461                           ;psect for function _PIN_MANAGER_Initialize
   462  07CF                     _PIN_MANAGER_Initialize:
   463  07CF                     l627:	
   464                           ;incstack = 0
   465                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
   466                           
   467                           
   468                           ;main.c: 75:     LATA = 0x00;
   469  07CF  0140               	movlb	0	; select bank0
   470  07D0  0198               	clrf	24	;volatile
   471                           
   472                           ;main.c: 76:     LATB = 0x00;
   473  07D1  0199               	clrf	25	;volatile
   474                           
   475                           ;main.c: 77:     LATC = 0x00;
   476  07D2  019A               	clrf	26	;volatile
   477  07D3                     l629:
   478                           
   479                           ;main.c: 80:     TRISA = 0x3B;
   480  07D3  303B               	movlw	59
   481  07D4  0092               	movwf	18	;volatile
   482  07D5                     l631:
   483                           
   484                           ;main.c: 81:     TRISB = 0xF0;
   485  07D5  30F0               	movlw	240
   486  07D6  0093               	movwf	19	;volatile
   487  07D7                     l633:
   488                           
   489                           ;main.c: 82:     TRISC = 0xFF;
   490  07D7  30FF               	movlw	255
   491  07D8  0094               	movwf	20	;volatile
   492  07D9                     l635:
   493                           
   494                           ;main.c: 85:     ANSELC = 0xFB;
   495  07D9  30FB               	movlw	251
   496  07DA  017E               	movlb	62	; select bank62
   497  07DB  00CE               	movwf	78	;volatile
   498  07DC                     l637:
   499                           
   500                           ;main.c: 86:     ANSELB = 0xF0;
   501  07DC  30F0               	movlw	240
   502  07DD  00C3               	movwf	67	;volatile
   503  07DE                     l639:
   504                           
   505                           ;main.c: 87:     ANSELA = 0x33;
   506  07DE  3033               	movlw	51
   507  07DF  00B8               	movwf	56	;volatile
   508                           
   509                           ;main.c: 90:     WPUB = 0x00;
   510  07E0  01C4               	clrf	68	;volatile
   511  07E1                     l641:
   512                           
   513                           ;main.c: 91:     WPUA = 0x04;
   514  07E1  3004               	movlw	4
   515  07E2  00B9               	movwf	57	;volatile
   516  07E3                     l643:
   517                           
   518                           ;main.c: 92:     WPUC = 0x04;
   519  07E3  3004               	movlw	4
   520  07E4  00CF               	movwf	79	;volatile
   521                           
   522                           ;main.c: 95:     ODCONA = 0x00;
   523  07E5  01BA               	clrf	58	;volatile
   524                           
   525                           ;main.c: 96:     ODCONB = 0x00;
   526  07E6  01C5               	clrf	69	;volatile
   527                           
   528                           ;main.c: 97:     ODCONC = 0x00;
   529  07E7  01D0               	clrf	80	;volatile
   530  07E8                     l645:
   531                           
   532                           ;main.c: 100:     SLRCONA = 0x37;
   533  07E8  3037               	movlw	55
   534  07E9  00BB               	movwf	59	;volatile
   535  07EA                     l647:
   536                           
   537                           ;main.c: 101:     SLRCONB = 0xF0;
   538  07EA  30F0               	movlw	240
   539  07EB  00C6               	movwf	70	;volatile
   540  07EC                     l649:
   541                           
   542                           ;main.c: 102:     SLRCONC = 0xFF;
   543  07EC  30FF               	movlw	255
   544  07ED  00D1               	movwf	81	;volatile
   545  07EE                     l651:
   546                           
   547                           ;main.c: 105:     INLVLA = 0x3F;
   548  07EE  303F               	movlw	63
   549  07EF  00BC               	movwf	60	;volatile
   550  07F0                     l653:
   551                           
   552                           ;main.c: 106:     INLVLB = 0xF0;
   553  07F0  30F0               	movlw	240
   554  07F1  00C7               	movwf	71	;volatile
   555  07F2                     l655:
   556                           
   557                           ;main.c: 107:     INLVLC = 0xFF;
   558  07F2  30FF               	movlw	255
   559  07F3  00D2               	movwf	82	;volatile
   560  07F4                     l657:
   561                           
   562                           ;main.c: 112:     TRISA2 = 0;
   563  07F4  0140               	movlb	0	; select bank0
   564  07F5  1112               	bcf	18,2	;volatile
   565  07F6                     l659:
   566                           
   567                           ;main.c: 113:     TRISC2 = 1;
   568  07F6  1514               	bsf	20,2	;volatile
   569  07F7                     l661:
   570                           
   571                           ;main.c: 114:     WPUC2 =1;
   572  07F7  017E               	movlb	62	; select bank62
   573  07F8  154F               	bsf	79,2	;volatile
   574  07F9                     l663:
   575                           
   576                           ;main.c: 115:     ANSELAbits.ANSA1 = 1;
   577  07F9  14B8               	bsf	56,1	;volatile
   578  07FA                     l77:
   579  07FA  0008               	return
   580  07FB                     __end_of_PIN_MANAGER_Initialize:
   581                           
   582                           	psect	text2
   583  0782                     __ptext2:	
   584 ;; *************** function _OSCILLATOR_Initialize *****************
   585 ;; Defined at:
   586 ;;		line 120 in file "main.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		status,2
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   600 ;;      Params:         0       0       0       0       0       0       0       0
   601 ;;      Locals:         0       0       0       0       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0       0       0       0
   603 ;;      Totals:         0       0       0       0       0       0       0       0
   604 ;;Total ram usage:        0 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           
   614                           ;psect for function _OSCILLATOR_Initialize
   615  0782                     _OSCILLATOR_Initialize:
   616  0782                     l665:	
   617                           ;incstack = 0
   618                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
   619                           
   620                           
   621                           ;main.c: 122:     OSCEN = 0x00;
   622  0782  0151               	movlb	17	; select bank17
   623  0783  0191               	clrf	17	;volatile
   624                           
   625                           ;main.c: 123:     OSCFRQ = 0x00;
   626  0784  0193               	clrf	19	;volatile
   627                           
   628                           ;main.c: 124:     OSCTUNE = 0x00;
   629  0785  0192               	clrf	18	;volatile
   630  0786                     l80:
   631  0786  0008               	return
   632  0787                     __end_of_OSCILLATOR_Initialize:
   633                           
   634                           	psect	text3
   635  0787                     __ptext3:	
   636 ;; *************** function _ADC_Initialize *****************
   637 ;; Defined at:
   638 ;;		line 128 in file "main.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;		None
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		wreg, status,2
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   652 ;;      Params:         0       0       0       0       0       0       0       0
   653 ;;      Locals:         0       0       0       0       0       0       0       0
   654 ;;      Temps:          0       0       0       0       0       0       0       0
   655 ;;      Totals:         0       0       0       0       0       0       0       0
   656 ;;Total ram usage:        0 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; This function calls:
   659 ;;		Nothing
   660 ;; This function is called by:
   661 ;;		_main
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           
   666                           ;psect for function _ADC_Initialize
   667  0787                     _ADC_Initialize:
   668  0787                     l667:	
   669                           ;incstack = 0
   670                           ; Regs used in _ADC_Initialize: [wreg+status,2]
   671                           
   672                           
   673                           ;main.c: 130:     ADCON0 = 0x01;
   674  0787  3001               	movlw	1
   675  0788  0141               	movlb	1	; select bank1
   676  0789  009D               	movwf	29	;volatile
   677                           
   678                           ;main.c: 131:     ADCON1 = 0x40;
   679  078A  3040               	movlw	64
   680  078B  009E               	movwf	30	;volatile
   681  078C                     l669:
   682                           
   683                           ;main.c: 132:     ADRESL = 0x00;
   684  078C  019B               	clrf	27	;volatile
   685  078D                     l671:
   686                           
   687                           ;main.c: 133:     ADRESH = 0x00;
   688  078D  019C               	clrf	28	;volatile
   689  078E                     l83:
   690  078E  0008               	return
   691  078F                     __end_of_ADC_Initialize:
   692                           
   693                           	psect	text4
   694  078F                     __ptext4:	
   695 ;; *************** function _ADC_GetConversion *****************
   696 ;; Defined at:
   697 ;;		line 137 in file "main.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;  channel         1    wreg     enum E3540
   700 ;; Auto vars:     Size  Location     Type
   701 ;;  channel         1    3[COMMON] enum E3540
   702 ;; Return value:  Size  Location     Type
   703 ;;                  2    0[COMMON] unsigned short 
   704 ;; Registers used:
   705 ;;		wreg, status,2, status,0
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   711 ;;      Params:         2       0       0       0       0       0       0       0
   712 ;;      Locals:         1       0       0       0       0       0       0       0
   713 ;;      Temps:          1       0       0       0       0       0       0       0
   714 ;;      Totals:         4       0       0       0       0       0       0       0
   715 ;;Total ram usage:        4 bytes
   716 ;; Hardware stack levels used:    1
   717 ;; This function calls:
   718 ;;		Nothing
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           
   725                           ;psect for function _ADC_GetConversion
   726  078F                     _ADC_GetConversion:
   727                           
   728                           ;incstack = 0
   729                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
   730                           ;ADC_GetConversion@channel stored from wreg
   731  078F  00F3               	movwf	ADC_GetConversion@channel
   732  0790                     l697:
   733                           
   734                           ;main.c: 137: adc_result_t ADC_GetConversion(adc_channel_t channel);main.c: 138: {;main.
      +                          c: 139:     ADCON0bits.CHS = channel;
   735  0790  0873               	movf	ADC_GetConversion@channel,w
   736  0791  00F2               	movwf	??_ADC_GetConversion
   737  0792  0DF2               	rlf	??_ADC_GetConversion,f
   738  0793  0DF2               	rlf	??_ADC_GetConversion,f
   739  0794  0141               	movlb	1	; select bank1
   740  0795  081D               	movf	29,w	;volatile
   741  0796  0672               	xorwf	??_ADC_GetConversion,w
   742  0797  3903               	andlw	-253
   743  0798  0672               	xorwf	??_ADC_GetConversion,w
   744  0799  009D               	movwf	29	;volatile
   745  079A                     l699:
   746                           
   747                           ;main.c: 140:     ADCON0bits.ADON = 1;
   748  079A  141D               	bsf	29,0	;volatile
   749  079B                     l701:
   750                           
   751                           ;main.c: 141:     _delay((unsigned long)((10)*(1000000/4000000.0)));
   752  079B  3200               	nop2	;2 cycle nop
   753  079C                     l703:
   754                           
   755                           ;main.c: 142:     ADCON0bits.GO_nDONE = 1;
   756  079C  0141               	movlb	1	; select bank1
   757  079D  149D               	bsf	29,1	;volatile
   758                           
   759                           ;main.c: 144:     while (ADCON0bits.GO_nDONE)
   760  079E  2FA0               	goto	l86
   761  079F                     l87:
   762  079F  0064               	clrwdt	;# 
   763  07A0                     l86:	
   764                           ;main.c: 147:     }
   765                           
   766                           
   767                           ;main.c: 144:     while (ADCON0bits.GO_nDONE)
   768  07A0  0141               	movlb	1	; select bank1
   769  07A1  189D               	btfsc	29,1	;volatile
   770  07A2  2FA4               	goto	u41
   771  07A3  2FA5               	goto	u40
   772  07A4                     u41:
   773  07A4  2F9F               	goto	l87
   774  07A5                     u40:
   775  07A5                     l705:
   776                           
   777                           ;main.c: 149:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
   778  07A5  081C               	movf	28,w	;volatile
   779  07A6  00F1               	movwf	?_ADC_GetConversion+1
   780  07A7  081B               	movf	27,w	;volatile
   781  07A8  00F0               	movwf	?_ADC_GetConversion
   782  07A9                     l89:
   783  07A9  0008               	return
   784  07AA                     __end_of_ADC_GetConversion:
   785  007E                     btemp	set	126	;btemp
   786  007E                     wtemp0	set	126
   787                           
   788                           	psect	config
   789                           
   790                           ;Config register CONFIG1 @ 0x8007
   791                           ;	External Oscillator Mode Selection bits
   792                           ;	FEXTOSC = OFF, Oscillator not enabled
   793                           ;	Power-up Default Value for COSC bits
   794                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
   795                           ;	Clock Out Enable bit
   796                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
   797                           ;	VDD Range Analog Calibration Selection bit
   798                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
   799  8007                     	org	32775
   800  8007  3FED               	dw	16365
   801                           
   802                           ;Config register CONFIG2 @ 0x8008
   803                           ;	Master Clear Enable bit
   804                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
   805                           ;	Power-up Timer Selection bits
   806                           ;	PWRTS = PWRT_OFF, PWRT is disabled
   807                           ;	WDT Operating Mode bits
   808                           ;	WDTE = OFF, WDT disabled; SEN is ignored
   809                           ;	Brown-out Reset Enable bits
   810                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
   811                           ;	Brown-out Reset Voltage Selection bit
   812                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
   813                           ;	PPSLOCKED One-Way Set Enable bit
   814                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once in software
   815                           ;	Stack Overflow/Underflow Reset Enable bit
   816                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
   817  8008                     	org	32776
   818  8008  3FE7               	dw	16359
   819                           
   820                           ;Config register CONFIG4 @ 0x800A
   821                           ;	Boot Block Size Selection bits
   822                           ;	BBSIZE = BB512, 512 words boot block size
   823                           ;	Boot Block Enable bit
   824                           ;	BBEN = OFF, Boot Block is disabled
   825                           ;	SAF Enable bit
   826                           ;	SAFEN = OFF, SAF is disabled
   827                           ;	Application Block Write Protection bit
   828                           ;	WRTAPP = OFF, Application Block is not write-protected
   829                           ;	Boot Block Write Protection bit
   830                           ;	WRTB = OFF, Boot Block is not write-protected
   831                           ;	Configuration Registers Write Protection bit
   832                           ;	WRTC = OFF, Configuration Registers are not write-protected
   833                           ;	Storage Area Flash (SAF) Write Protection bit
   834                           ;	WRTSAF = OFF, SAF is not write-protected
   835                           ;	Low Voltage Programming Enable bit
   836                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
   837  800A                     	org	32778
   838  800A  3FFF               	dw	16383
   839                           
   840                           ;Config register CONFIG5 @ 0x800B
   841                           ;	User Program Flash Memory Code Protection bit
   842                           ;	CP = OFF, User Program Flash Memory code protection is disabled
   843  800B                     	org	32779
   844  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_GetConversion

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      22
                  _ADC_GetConversion
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_Initialize
   _OSCILLATOR_Initialize
   _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      4       6       2       42.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       6       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0       6      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Nov 11 22:27:25 2020

                             l80 0786                               l83 078E                               l77 07FA  
                             l86 07A0                               l87 079F                               l95 07CB  
                             l96 07C8                               l89 07A9                               u40 07A5  
                             u41 07A4                               u50 07B8                               u51 07B7  
                             u60 07C5                               u61 07C4                              l701 079B  
                            l703 079C                              l631 07D5                              l711 07AD  
                            l705 07A5                              l641 07E1                              l633 07D7  
                            l713 07B0                              l651 07EE                              l643 07E3  
                            l635 07D9                              l627 07CF                              l715 07B3  
                            l661 07F7                              l653 07F0                              l645 07E8  
                            l637 07DC                              l629 07D3                              l717 07B8  
                            l709 07AA                              l671 078D                              l663 07F9  
                            l655 07F2                              l647 07EA                              l639 07DE  
                            l719 07C5                              l665 0782                              l657 07F4  
                            l649 07EC                              l667 0787                              l659 07F6  
                            l669 078C                              l697 0790                              l699 079A  
                           _LATA 0018                             _LATB 0019                             _LATC 001A  
                           _WPUA 1F39                             _WPUB 1F44                             _WPUC 1F4F  
                           _main 07AA                             btemp 007E                             start 0002  
 __size_of_OSCILLATOR_Initialize 0005    __end_of_OSCILLATOR_Initialize 0787                            ?_main 0070  
                          _OSCEN 0891                            _TRISA 0012                            _TRISB 0013  
                          _TRISC 0014                            _WPUC2 FA7A                            wtemp0 007E  
                __initialization 07FB                     __end_of_main 07CF                           ??_main 0074  
                         _ADCON0 009D                           _ADCON1 009E                           _ADRESH 009C  
                         _ADRESL 009B                           _ANSELA 1F38                           _ANSELB 1F43  
                         _ANSELC 1F4E                           _ODCONA 1F3A                           _ODCONB 1F45  
                         _ODCONC 1F50                           _INLVLA 1F3C                           _INLVLB 1F47  
                         _INLVLC 1F52                           _OSCFRQ 0893                           _TRISA2 0092  
                         _TRISC2 00A2         ADC_GetConversion@channel 0073          __end_of__initialization 07FD  
                 __pcstackCOMMON 0070                       __pmaintext 07AA          __size_of_ADC_Initialize 0008  
                        _OSCTUNE 0892                          _SLRCONA 1F3B                          _SLRCONB 1F46  
                        _SLRCONC 1F51                          __ptext1 07CF                          __ptext2 0782  
                        __ptext3 0787                          __ptext4 078F            _OSCILLATOR_Initialize 0782  
       ??_PIN_MANAGER_Initialize 0070             end_of_initialization 07FD                        _PORTCbits 000E  
                 _ADC_Initialize 0787           ?_OSCILLATOR_Initialize 0070              start_initialization 07FB  
__size_of_PIN_MANAGER_Initialize 002C           __end_of_ADC_Initialize 078F                      __pbssCOMMON 0074  
                      ___latbits 0001           _PIN_MANAGER_Initialize 07CF                  ?_ADC_Initialize 0070  
                      _par_impar 0074                         _LATAbits 0018                       _ADCON0bits 009D  
              _ADC_GetConversion 078F          ??_OSCILLATOR_Initialize 0070               ?_ADC_GetConversion 0070  
                     _ANSELAbits 1F38              ??_ADC_GetConversion 0072                    __size_of_main 0025  
      __end_of_ADC_GetConversion 07AA          ?_PIN_MANAGER_Initialize 0070                 ??_ADC_Initialize 0070  
 __end_of_PIN_MANAGER_Initialize 07FB       __size_of_ADC_GetConversion 001B  
